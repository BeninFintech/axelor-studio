
<%
def combinator = rule.combinator=='and'?'&&':'||'
def rules = rule.rules
%><%
if(rule.rules!=null && !rule.rules.isEmpty()){
rules.each{ childRule ->
%>${groovyScriptService.buildRule(childRule,metaModelVarName)}${rules.last()!=childRule?combinator:''}<%}%><%}%><%
if(rule.allField!=null && !rule.allField.isEmpty()){
if(!['notIn','in'].contains(rule.operator)){%>${['notLike','notBetween'].contains(rule.operator)?'!':''}${(['between','notBetween'].contains(rule.operator))?'(':''}<%if(rule.transformations.isEmpty()){%>${metaModelVarName}?.${groovyScriptService.buildFieldName(rule.allField)}<%}
else{%>${groovyScriptService.buildTransformation(rule.transformations,metaModelVarName+'?.'+groovyScriptService.buildFieldName(rule.allField))}<%}}
if(rule.operator!=null){
    if('isNotNull'==rule.operator){%>!=null<%}
    if('isNull'==rule.operator){%>==null<%}
    if('isTrue'==rule.operator){%>==true<%}
    if('isFalse'==rule.operator){%>!=true<%}
    if(['!=','=','>=','<=','<','>'].contains(rule.operator)){
    %>${rule.operator!='='?rule.operator:'=='}<%if(rule.valueTransformations.isEmpty()){%>${(rule.fieldType!=null && rule.fieldType.toUpperCase()=='STRING')?"'":''}${rule.fieldValue}${(rule.fieldType!=null && rule.fieldType.toUpperCase()=='STRING')?"'":''}<%}else{%> ${groovyScriptService.buildTransformation(rule.valueTransformations,((rule.fieldType!=null && rule.fieldType.toUpperCase()=='STRING')?"'":'')+rule.fieldValue+((rule.fieldType!=null && rule.fieldType.toUpperCase()=='STRING')?"'":''))}<%
    }}
    if(['notLike','like'].contains(rule.operator)){%>?.contains(<%if(rule.valueTransformations.isEmpty()){%>${(rule.fieldType!=null && rule.fieldType.toUpperCase()=='STRING')?"'":''}${rule.fieldValue}${(rule.fieldType!=null && rule.fieldType.toUpperCase()=='STRING')?"'":''})<%}else{%> ${groovyScriptService.buildTransformation(rule.valueTransformations,((rule.fieldType!=null && rule.fieldType.toUpperCase()=='STRING')?"'":'')+rule.fieldValue+((rule.fieldType!=null && rule.fieldType.toUpperCase()=='STRING')?"'":''))})<%}}
    if(['notIn','in'].contains(rule.operator)){%>${'notIn'==rule.operator?'!':''}${rule.fieldValue}?.contains(<%if(rule.transformations.isEmpty()){%>${metaModelVarName}?.${groovyScriptService.buildFieldName(rule.allField)}<%}
                                                                              else{%>${rule.operator}${groovyScriptService.buildTransformation(rule.transformations,metaModelVarName+'?.'+groovyScriptService.buildFieldName(rule.allField))}<%}%>)<%}
    if(['between','notBetween'].contains(rule.operator)){
    %>>=<%if(rule.valueTransformations.isEmpty()){%>${(rule.fieldType!=null && rule.fieldType.toUpperCase()=='STRING')?"'":''}${rule.fieldValue}${(rule.fieldType!=null && rule.fieldType.toUpperCase()=='STRING')=='STRING'?"'":''}<%}else{%>${groovyScriptService.buildTransformation(rule.valueTransformations,((rule.fieldType!=null && rule.fieldType.toUpperCase()=='STRING')?"'":'')+rule.fieldValue+((rule.fieldType!=null && rule.fieldType.toUpperCase()=='STRING')?"'":''))}<%
            }%>&&<%if(rule.transformations.isEmpty()){%>${metaModelVarName}?.${groovyScriptService.buildFieldName(rule.allField)}<%}
                  else{%>${groovyScriptService.buildTransformation(rule.transformations,metaModelVarName+'?.'+groovyScriptService.buildFieldName(rule.allField))}<%}%><=<%if(rule.valueTransformations2.isEmpty()){%>${(rule.fieldType!=null && rule.fieldType.toUpperCase()=='STRING')?"'":''}${rule.fieldValue2}${(rule.fieldType!=null && rule.fieldType.toUpperCase()=='STRING')?"'":rule.fieldType}<%}else{
                  %>${groovyScriptService.buildTransformation(rule.valueTransformations2,((rule.fieldType!=null && rule.fieldType.toUpperCase()=='STRING')?"'":'')+rule.fieldValue2+((rule.fieldType!=null && rule.fieldType.toUpperCase()=='STRING')?"'":''))}<%
                                                                                                         }%><%
    }
 }
}%>