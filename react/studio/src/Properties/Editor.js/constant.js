export const CUSTOM_LANGUAGES = {
    JPQL: "jpql",
    GROOVY: "groovy",
  };

  export const JPQL_KEYWORDS = [
    "SELECT",
    "FROM",
    "WHERE",
    "GROUP BY",
    "HAVING",
    "ORDER BY",
    "JOIN",
    "INNER JOIN",
    "LEFT JOIN",
    "RIGHT JOIN",
    "INNER",
    "OUTER",
    "LEFT",
    "RIGHT",
    "FETCH",
    "DISTINCT",
    "AND",
    "OR",
    "NOT",
    "BETWEEN",
    "LIKE",
    "IN",
    "IS NULL",
    "IS NOT NULL",
    "NULL",
    "TRUE",
    "FALSE",
    "self",
    "as",
  ];

  export const JPQL_FUNCTIONS = [
    "COUNT",
    "SUM",
    "AVG",
    "MIN",
    "MAX",
    "CONCAT",
    "SUBSTRING",
    "LENGTH",
    "LOWER",
    "UPPER",
    "CASE",
    "WHEN",
    "THEN",
    "ELSE",
    "END",
    "NULLS FIRST",
    "NULLS LAST",
    "ASC",
    "DESC",
    "PARAMETER",
  ];

  export const GROOVY_KEYWORDS = [
    "abstract",
    "as",
    "assert",
    "boolean",
    "break",
    "byte",
    "case",
    "catch",
    "char",
    "class",
    "const",
    "continue",
    "def",
    "default",
    "do",
    "double",
    "else",
    "enum",
    "extends",
    "false",
    "final",
    "finally",
    "float",
    "for",
    "goto",
    "if",
    "implements",
    "import",
    "in",
    "instanceof",
    "int",
    "interface",
    "long",
    "native",
    "new",
    "null",
    "package",
    "private",
    "protected",
    "public",
    "return",
    "short",
    "static",
    "strictfp",
    "super",
    "switch",
    "synchronized",
    "this",
    "threadsafe",
    "throw",
    "throws",
    "transient",
    "true",
    "try",
    "void",
    "volatile",
    "while",
  ];

  export const GROOVY_FUNCTIONS = [
    "addAll",
    "asImmutable",
    "asReversed",
    "asSynchronized",
    "asUnmodifiable",
    "bufferedIterator",
    "drop",
    "dropRight",
    "dropWhile",
    "each",
    "eachWithIndex",
    "equals",
    "execute",
    "findAll",
    "find",
    "first",
    "flatten",
    "getAt",
    "grep",
    "head",
    "init",
    "intersect",
    "last",
    "leftShift",
    "minus",
    "multiply",
    "plus",
    "pop",
    "push",
    "putAt",
    "removeAt",
    "removeLast",
    "reverse",
    "shuffle",
    "shuffled",
    "split",
    "subsequences",
    "swap",
    "tail",
    "take",
    "takeRight",
    "takeWhile",
    "toSpreadMap",
    "toUnique",
    "transpose",
    "unique",
    "withDefault",
    "withEagerDefault",
    "withLazyDefault",
  ];

  export const COMMON_TOKENIZER = [
    [/\b\d+\b/, "number"],
    [/".*"/, "string"],
    [/[a-zA-Z_]\w*/, "identifier"],
    [/"/, "string", "@string"],
    [/===|\?|\./, "custom-operator"],
    [/[!@#$%^&*()\-+=\[\]{}|;:'",.<>\/?]+/, "custom-punctuation"],
    [/[^\w\s]/, "custom-special"],
  ];
  export const STRING_TOKENIZER = [
    [/"$/, "string", "@pop"],
    [/'$/, "string", "@pop"],
    [/[^"'\n\\]+/, "string"],
    [/\\./, "string.escape"],
    [/["']/, "string", "@pop"],
  ];
  export const JPQL_CONFIG = {
    comments: {
      lineComment: "--",
      blockComment: ["/*", "*/"],
    },
    brackets: [
      ["{", "}"],
      ["[", "]"],
      ["(", ")"],
    ],
    autoClosingPairs: [
      { open: "{", close: "}" },
      { open: "[", close: "]" },
      { open: "(", close: ")" },
      { open: "'", close: "'", notIn: ["string"] },
      { open: '"', close: '"', notIn: ["string"] },
    ],
    surroundingPairs: [
      { open: "{", close: "}" },
      { open: "[", close: "]" },
      { open: "(", close: ")" },
      { open: "'", close: "'" },
      { open: '"', close: '"' },
    ],
    folding: {
      markers: {
        start: new RegExp("^\\s*\\/\\*\\s*region\\b\\s*(.*?)\\s*$"),
        end: new RegExp("^\\s*\\/\\*\\s*endregion\\b\\s*(.*?)\\s*$"),
      },
    },
  };

  export const GROOVY_CONFIG = {
    comments: {
      lineComment: "//",
      blockComment: ["/*", "*/"],
    },
    brackets: [
      ["{", "}"],
      ["[", "]"],
      ["(", ")"],
    ],
    autoClosingPairs: [
      { open: "{", close: "}" },
      { open: "[", close: "]" },
      { open: "(", close: ")" },
      { open: "'", close: "'", notIn: ["string"] },
      { open: '"', close: '"', notIn: ["string"] },
    ],
  };
  export const THEME_RULES = [
    { token: "custom-operator", foreground: "#800080" },
    { token: "custom-punctuation", foreground: "#008000" },
    { token: "custom-special", foreground: "#ffa20c" },
    { token: "identifier", foreground: "800080" },
  ];
